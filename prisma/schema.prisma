// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(uuid())
  email             String           @unique
  emailVerified     Boolean          @default(false)
  firstName         String
  lastName          String?
  language          String?
  avatar            File?
  pictureUrl        String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  createdEvents     Event[]
  createdTimetables Timetable[]
  savedTimetables   SavedTimetable[]
}

model File {
  id           String   @id @default(uuid())
  name         String?
  bucket       String
  key          String
  size         Int
  mimetype     String
  userAvatar   User?    @relation(fields: [userAvatarId], references: [id], onDelete: Cascade)
  userAvatarId String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum RepeatFrequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model Event {
  id             String           @id @default(uuid())
  code           String?          @unique
  title          String
  description    String?
  startDate      DateTime
  startTime      String?
  endTime        String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  timetable      Timetable?       @relation(fields: [timetableId], references: [id])
  timetableId    String?
  owner          User             @relation(fields: [ownerId], references: [id])
  ownerId        String
  repeat         RepeatFrequency?
  cancelledDates DateTime[]
}

model Timetable {
  id          String           @id @default(uuid())
  title       String
  description String?
  code        String?
  events      Event[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  owner       User             @relation(fields: [ownerId], references: [id])
  ownerId     String
  saves       SavedTimetable[]
}

model SavedTimetable {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  timetable   Timetable @relation(fields: [timetableId], references: [id])
  timetableId String
  createdAt   DateTime  @default(now())

  @@unique([userId, timetableId])
}
